# Stage 1: Build the React app using Node.js
FROM node:22-alpine AS build

# Set working directory inside the container
WORKDIR /app

# Copy package.json and package-lock.json (if available) to install dependencies
COPY package*.json ./

# Install npm dependencies
RUN npm install 

# Copy the rest of the project files (source code, public, etc.)
COPY . .

# Build the production-ready React app (creates /build folder)
RUN npm run build


# Stage 2: Serve the build with NGINX 
FROM nginx:1.25-alpine

# Copy custom NGINX config to replace the default one
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy the build output from the previous stage into NGINX's web root
COPY --from=Build /app/build /usr/share/nginx/html

# Expose port 80 to allow incoming web traffic
EXPOSE 80

# Start NGINX in the foreground (Docker containers must run a foreground process)
CMD [ "nginx","-g", "daemon off;" ]

